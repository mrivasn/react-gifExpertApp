{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","fSetCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","categories","className","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","setCategories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"mMAGaA,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAAqB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAkB/C,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAS,IACpBP,GAAiB,SAAAQ,GAAU,OAAMN,GAAN,mBAAqBM,OAChDL,EAAc,MAKlB,SACI,uBAAOM,UAAU,yCACbC,KAAK,OACLC,MAAUT,EACVU,SAlBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCTnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAEC,GAAU,IAAD,EAC9B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAClC,OACI,sBAAKR,UAAU,6CAAf,UACI,qBAAKsB,IAAOd,EAAMe,IAAML,EAAQlB,UAAU,iDAC1C,mBAAGA,UAAU,yCAAb,SAAuDkB,QCFtDM,EAAW,SAAC,GAAoB,IAAjBlB,EAAgB,EAAhBA,SAAgB,ECChB,SAAEA,GAAe,IAAD,EAEZd,mBAAU,CAClCqB,KAAM,GACNY,SAAS,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAmBxC,OAXAC,qBAAW,WACPvB,EAASC,GACJuB,MAAM,SAAAC,GAAI,OACHH,EAAU,CACNd,KAAMiB,EACNL,SAAS,SAGlB,CAAEnB,IAGNoB,EDlB2BK,CAAczB,GAAlCa,EAF0B,EAEhCN,KAAcY,EAFkB,EAElBA,QAEtB,OACQ,qCACI,oBAAIzB,UAAU,yCAAd,SAAyDM,IAEvDmB,GAAW,mBAAGzB,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEQmB,EAAOJ,KAAK,SAAEC,GAAF,OAER,aADA,CACC,EAAD,eAAiCA,GAAbA,EAAIC,aEdvCe,EAAe,WAAO,IAAD,EAEMxC,mBAAU,CAAC,aAFjB,mBAEvBO,EAFuB,KAEXkC,EAFW,KAI9B,OACI,qCACI,oBAAIjC,UAAU,yCAAd,0BACA,oBAAIA,UAAU,4CAEd,cAAC,EAAD,CAAaT,eAAmB0C,IAEhC,6BAEQlC,EAAWgB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEQA,SAAaA,GADLA,YCdlC4B,G,MAAUC,SAASC,eAAe,SAExCC,IAASC,OAAQ,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.bf2df19c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {fSetCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    // input con el Ãºltimo vaor escrito\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    };\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.length > 2 ){\r\n            fSetCategories ( categories => [ inputValue, ...categories  ] );\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }> \r\n            <input className='animate__animated animate__slideInLeft'\r\n                type='Text' \r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n   \r\nAddCategory.propTypes = {\r\n    fSetCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Gtm5XZZRHCRmNlrjhjs3vYf0Ok6ld72o`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( ( img ) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeInLeft'>\r\n            <img src= { url } alt={ title } className='card animate__animated animate__slideInRight' />\r\n            <p className='animate__animated animate__slideInDown'>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GiftGrid = ( { category } ) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n            <>\r\n                <h3 className='animate__animated animate__slideInLeft'>{ category }</h3>\r\n\r\n                { loading && <p className='animate__animated animate__pulse' >Loading...</p> }\r\n\r\n                <div className='card-grid'>\r\n                    {\r\n                        images.map( ( img ) => (\r\n                            // <GifGridItem  key={ img.id } images = {img}  />\r\n                            <GifGridItem  key={ img.id } {...img}  /> // reemplaza al props 'images'\r\n                        ))\r\n                    }\r\n                </div>\r\n            </>\r\n    )\r\n}\r\n","// los hooks son funciones\r\n// no devuelve jsx a diferencia de un componente\r\nimport { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [ state, setState ] = useState( {\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    //useEffect se usa para que no se ejecute nuevamente el componente\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => \r\n                    setState( {\r\n                        data: imgs,\r\n                        loading: false\r\n                    }) \r\n                )\r\n            }, [ category ]\r\n    );\r\n    \r\n    return state; //{ data:[], loading: true}\r\n}\r\n","import React, { useState } from 'react'\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( ['Robotech'] );\r\n\r\n    return (\r\n        <>\r\n            <h2 className='animate__animated animate__slideInDown'>GitExpertApp</h2>\r\n            <hr className='animate__animated animate__slideInRight' />\r\n\r\n            <AddCategory fSetCategories = { setCategories } />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => (\r\n                        <GiftGrid \r\n                                key = { category } \r\n                                category = { category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.getElementById('root');\n\nReactDOM.render( <GifExpertApp />, divRoot );"],"sourceRoot":""}